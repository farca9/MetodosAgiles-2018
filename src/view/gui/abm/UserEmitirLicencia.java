/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.gui.abm;

import controller.LicenciaController;
import controller.TitularController;
import dao.TitularDAO;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.ClaseLicenciaEnum;
import model.GrupoSanguineoEnum;
import model.Licencia;
import model.TipoDocumentoEnum;
import model.Titular;
import util.FiltroTitularesEnum;
import util.LengthRestrictedDocument;
import view.gui.menus.UserMenu;

/**
 *
 * @author Facundo
 */
public class UserEmitirLicencia extends javax.swing.JFrame {

    private ClaseLicenciaEnum claseSeleccionada;
    private List<Titular> titulares;
    private SimpleDateFormat sdf= new SimpleDateFormat("dd/MM/yyyy");
    
    /**
     * Creates new form UserEmitirLicencia
     */
    public UserEmitirLicencia() {
        //Inicializacion de la ventana
        ImageIcon logo = new ImageIcon("src/res/drawable/sfc_logo.jpg");
        Image icon = logo.getImage();
        this.setIconImage(icon);
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        double width = screenSize.getWidth()/2;
        double height = screenSize.getHeight()/2;
        this.setLocation((int)width-this.getWidth()/2,(int)height-this.getHeight()/2);
        this.setLocationRelativeTo(null);
        
        radioGroup.add(radioA);
        radioGroup.add(radioB);
        radioGroup.add(radioC);
        radioGroup.add(radioD);
        radioGroup.add(radioE);
        radioGroup.add(radioF);
        radioGroup.add(radioG);
        
        txtAreaClaseLicencia.setBackground(Color.LIGHT_GRAY);
                               
        tableTitulares.setRowSelectionAllowed(true);
        tableTitulares.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tableTitulares.getTableHeader().setReorderingAllowed(false);
        
        tableTitulares.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent event) {
            
            if(tableTitulares.getSelectedRow() == -1) return;
            
            //btnEmitirLicencia.setEnabled(false);
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/MM/yyyy");
            
            txtFiltro.setText("");
            txtFiltro.setEnabled(false);
            btnAplicarFiltro.setEnabled(false);
            btnLimpiarFiltro.setEnabled(true);
            
            radioA.setEnabled(true);
            radioB.setEnabled(true);
            radioC.setEnabled(true);
            radioD.setEnabled(true);
            radioE.setEnabled(true);
            radioF.setEnabled(true);
            radioG.setEnabled(true);
            
            radioGroup.clearSelection();
            txtAreaClaseLicencia.setText("");
            
            Titular t = titulares.get(tableTitulares.getSelectedRow());
            labelNombre.setText("Nombre: "+t.getNombre());
            labelApellido.setText("Apellido: "+t.getApellido());
            labelTipoNroDocumento.setText("Documento: "+t.getTipoDocumento().toString()+" "+t.getCodigoDocumento());
            labelDomicilio.setText("Domicilio: "+t.getDomicilio());
            labelFechaNacimiento.setText("Fecha de nacimiento: "+simpleDateFormat.format(t.getFechaNacimiento()));
            String factor;
            if(t.isFactor()) factor="+";
            else factor="-";
            labelGrupoFactorSanguineo.setText("Grupo Sanguineo: "+t.getGrupoSanguineo().toString()+" "+factor);
            String donante;
            if(t.isDonanteOrganos()) donante="SI DONA ORGANOS";
            else donante="NO DONA ORGANOS";
            labelDonanteOrganos.setText(donante);
            
        }
    });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioGroup = new javax.swing.ButtonGroup();
        lblSantaFe = new javax.swing.JLabel();
        pnlTitulo = new javax.swing.JPanel();
        lblEmitirLicencia = new javax.swing.JLabel();
        lblSubtitulo = new javax.swing.JLabel();
        pnlTitulares = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTitulares = new javax.swing.JTable();
        txtFiltro = new javax.swing.JTextField();
        btnFiltroNombre = new javax.swing.JButton();
        btnFiltroApellido = new javax.swing.JButton();
        btnFiltroDocumento = new javax.swing.JButton();
        btnAplicarFiltro = new javax.swing.JButton();
        btnLimpiarFiltro = new javax.swing.JButton();
        lblBuscarPor = new javax.swing.JLabel();
        pnlClaseLicencia = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaClaseLicencia = new javax.swing.JTextArea();
        pnlClases = new javax.swing.JPanel();
        radioE = new javax.swing.JRadioButton();
        radioG = new javax.swing.JRadioButton();
        radioB = new javax.swing.JRadioButton();
        radioF = new javax.swing.JRadioButton();
        radioA = new javax.swing.JRadioButton();
        radioC = new javax.swing.JRadioButton();
        radioD = new javax.swing.JRadioButton();
        lblDescripcionClase = new javax.swing.JLabel();
        btnEmitirLicencia = new javax.swing.JButton();
        pnlDatosTitular = new javax.swing.JPanel();
        labelNombre = new javax.swing.JLabel();
        labelApellido = new javax.swing.JLabel();
        labelTipoNroDocumento = new javax.swing.JLabel();
        labelDomicilio = new javax.swing.JLabel();
        labelFechaNacimiento = new javax.swing.JLabel();
        labelGrupoFactorSanguineo = new javax.swing.JLabel();
        labelDonanteOrganos = new javax.swing.JLabel();
        pnlObservaciones = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaObservaciones = new javax.swing.JTextArea();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GLC - SFC");
        setResizable(false);

        lblSantaFe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSantaFe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/drawable/logo-santafe.png"))); // NOI18N
        lblSantaFe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblEmitirLicencia.setFont(lblEmitirLicencia.getFont().deriveFont(lblEmitirLicencia.getFont().getSize()+13f));
        lblEmitirLicencia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmitirLicencia.setText("EMITIR UNA LICENCIA");

        lblSubtitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubtitulo.setText("A continuación, seleccione el titular y el tipo de licencia que desea emitir.");

        javax.swing.GroupLayout pnlTituloLayout = new javax.swing.GroupLayout(pnlTitulo);
        pnlTitulo.setLayout(pnlTituloLayout);
        pnlTituloLayout.setHorizontalGroup(
            pnlTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmitirLicencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSubtitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlTituloLayout.setVerticalGroup(
            pnlTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloLayout.createSequentialGroup()
                .addComponent(lblEmitirLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubtitulo)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pnlTitulares.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seleccione el Titular", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), null)); // NOI18N

        tableTitulares.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Tipo Documento", "N° Documento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTitulares.setRowHeight(20);
        jScrollPane1.setViewportView(tableTitulares);

        txtFiltro.setFont(txtFiltro.getFont().deriveFont(txtFiltro.getFont().getSize()+4f));
        txtFiltro.setEnabled(false);

        btnFiltroNombre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/filter_mini.png"))); // NOI18N
        btnFiltroNombre.setText("Nombre");
        btnFiltroNombre.setToolTipText("Filtre a los contribuyentes por su nombre.");
        btnFiltroNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltroNombreActionPerformed(evt);
            }
        });

        btnFiltroApellido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/filter_mini.png"))); // NOI18N
        btnFiltroApellido.setText("Apellido");
        btnFiltroApellido.setToolTipText("Filtre a los contribuyentes por su apellido.");
        btnFiltroApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltroApellidoActionPerformed(evt);
            }
        });

        btnFiltroDocumento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/filter_mini.png"))); // NOI18N
        btnFiltroDocumento.setText("Documento");
        btnFiltroDocumento.setToolTipText("Filtre a los contribuyentes por su N° de documento.");
        btnFiltroDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltroDocumentoActionPerformed(evt);
            }
        });

        btnAplicarFiltro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/search_mini.png"))); // NOI18N
        btnAplicarFiltro.setEnabled(false);
        btnAplicarFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplicarFiltroActionPerformed(evt);
            }
        });

        btnLimpiarFiltro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/cancel_mini.png"))); // NOI18N
        btnLimpiarFiltro.setEnabled(false);
        btnLimpiarFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarFiltroActionPerformed(evt);
            }
        });

        lblBuscarPor.setForeground(java.awt.Color.gray);
        lblBuscarPor.setText("Buscar por...");

        javax.swing.GroupLayout pnlTitularesLayout = new javax.swing.GroupLayout(pnlTitulares);
        pnlTitulares.setLayout(pnlTitularesLayout);
        pnlTitularesLayout.setHorizontalGroup(
            pnlTitularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTitularesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTitularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTitularesLayout.createSequentialGroup()
                        .addComponent(txtFiltro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAplicarFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiarFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTitularesLayout.createSequentialGroup()
                        .addGroup(pnlTitularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblBuscarPor, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTitularesLayout.createSequentialGroup()
                                .addComponent(btnFiltroNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFiltroApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFiltroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlTitularesLayout.setVerticalGroup(
            pnlTitularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitularesLayout.createSequentialGroup()
                .addComponent(lblBuscarPor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTitularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFiltroDocumento)
                    .addComponent(btnFiltroNombre)
                    .addComponent(btnFiltroApellido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTitularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAplicarFiltro)
                    .addComponent(btnLimpiarFiltro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlClaseLicencia.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seleccione la Clase", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), null)); // NOI18N

        txtAreaClaseLicencia.setEditable(false);
        txtAreaClaseLicencia.setColumns(20);
        txtAreaClaseLicencia.setFont(txtAreaClaseLicencia.getFont().deriveFont(txtAreaClaseLicencia.getFont().getSize()-1f));
        txtAreaClaseLicencia.setRows(3);
        jScrollPane3.setViewportView(txtAreaClaseLicencia);

        radioE.setFont(radioE.getFont().deriveFont(radioE.getFont().getSize()+8f));
        radioE.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.darcula.selection.color2"));
        radioE.setText("E");
        radioE.setEnabled(false);
        radioE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioEActionPerformed(evt);
            }
        });

        radioG.setFont(radioG.getFont().deriveFont(radioG.getFont().getSize()+8f));
        radioG.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.darcula.selection.color2"));
        radioG.setText("G");
        radioG.setEnabled(false);
        radioG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioGActionPerformed(evt);
            }
        });

        radioB.setFont(radioB.getFont().deriveFont(radioB.getFont().getSize()+8f));
        radioB.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.darcula.selection.color2"));
        radioB.setText("B");
        radioB.setEnabled(false);
        radioB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBActionPerformed(evt);
            }
        });

        radioF.setFont(radioF.getFont().deriveFont(radioF.getFont().getSize()+8f));
        radioF.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.darcula.selection.color2"));
        radioF.setText("F");
        radioF.setEnabled(false);
        radioF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFActionPerformed(evt);
            }
        });

        radioA.setFont(radioA.getFont().deriveFont(radioA.getFont().getSize()+8f));
        radioA.setForeground(new java.awt.Color(35, 48, 69));
        radioA.setText("A");
        radioA.setEnabled(false);
        radioA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAActionPerformed(evt);
            }
        });

        radioC.setFont(radioC.getFont().deriveFont(radioC.getFont().getSize()+8f));
        radioC.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.darcula.selection.color2"));
        radioC.setText("C");
        radioC.setEnabled(false);
        radioC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCActionPerformed(evt);
            }
        });

        radioD.setFont(radioD.getFont().deriveFont(radioD.getFont().getSize()+8f));
        radioD.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.darcula.selection.color2"));
        radioD.setText("D");
        radioD.setEnabled(false);
        radioD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlClasesLayout = new javax.swing.GroupLayout(pnlClases);
        pnlClases.setLayout(pnlClasesLayout);
        pnlClasesLayout.setHorizontalGroup(
            pnlClasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClasesLayout.createSequentialGroup()
                .addComponent(radioA)
                .addGap(18, 18, 18)
                .addComponent(radioB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radioC, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radioD, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radioE, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radioF, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(radioG)
                .addGap(0, 69, Short.MAX_VALUE))
        );

        pnlClasesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {radioA, radioB, radioC, radioD, radioE, radioF, radioG});

        pnlClasesLayout.setVerticalGroup(
            pnlClasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(radioA)
                .addComponent(radioB)
                .addComponent(radioC)
                .addComponent(radioD)
                .addComponent(radioE)
                .addComponent(radioF)
                .addComponent(radioG))
        );

        lblDescripcionClase.setFont(lblDescripcionClase.getFont().deriveFont(lblDescripcionClase.getFont().getStyle() & ~java.awt.Font.BOLD, lblDescripcionClase.getFont().getSize()-1));
        lblDescripcionClase.setForeground(java.awt.Color.gray);
        lblDescripcionClase.setPreferredSize(new java.awt.Dimension(63, 16));

        javax.swing.GroupLayout pnlClaseLicenciaLayout = new javax.swing.GroupLayout(pnlClaseLicencia);
        pnlClaseLicencia.setLayout(pnlClaseLicenciaLayout);
        pnlClaseLicenciaLayout.setHorizontalGroup(
            pnlClaseLicenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClaseLicenciaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClaseLicenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescripcionClase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addComponent(pnlClases, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlClaseLicenciaLayout.setVerticalGroup(
            pnlClaseLicenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClaseLicenciaLayout.createSequentialGroup()
                .addComponent(pnlClases, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDescripcionClase, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnEmitirLicencia.setFont(btnEmitirLicencia.getFont().deriveFont(btnEmitirLicencia.getFont().getSize()+2f));
        btnEmitirLicencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/save.png"))); // NOI18N
        btnEmitirLicencia.setText("Emitir Licencia");
        btnEmitirLicencia.setEnabled(false);
        btnEmitirLicencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmitirLicenciaActionPerformed(evt);
            }
        });

        pnlDatosTitular.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Titular", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), null)); // NOI18N

        labelNombre.setFont(labelNombre.getFont().deriveFont(labelNombre.getFont().getStyle() & ~java.awt.Font.BOLD, labelNombre.getFont().getSize()-2));
        labelNombre.setText(" ");

        labelApellido.setFont(labelApellido.getFont().deriveFont(labelApellido.getFont().getStyle() & ~java.awt.Font.BOLD, labelApellido.getFont().getSize()-2));
        labelApellido.setText(" ");

        labelTipoNroDocumento.setFont(labelTipoNroDocumento.getFont().deriveFont(labelTipoNroDocumento.getFont().getStyle() & ~java.awt.Font.BOLD, labelTipoNroDocumento.getFont().getSize()-2));
        labelTipoNroDocumento.setText(" ");

        labelDomicilio.setFont(labelDomicilio.getFont().deriveFont(labelDomicilio.getFont().getStyle() & ~java.awt.Font.BOLD, labelDomicilio.getFont().getSize()-2));
        labelDomicilio.setText(" ");

        labelFechaNacimiento.setFont(labelFechaNacimiento.getFont().deriveFont(labelFechaNacimiento.getFont().getStyle() & ~java.awt.Font.BOLD, labelFechaNacimiento.getFont().getSize()-2));
        labelFechaNacimiento.setText(" ");

        labelGrupoFactorSanguineo.setFont(labelGrupoFactorSanguineo.getFont().deriveFont(labelGrupoFactorSanguineo.getFont().getStyle() & ~java.awt.Font.BOLD, labelGrupoFactorSanguineo.getFont().getSize()-2));
        labelGrupoFactorSanguineo.setText(" ");

        labelDonanteOrganos.setFont(labelDonanteOrganos.getFont().deriveFont(labelDonanteOrganos.getFont().getStyle() & ~java.awt.Font.BOLD, labelDonanteOrganos.getFont().getSize()-2));
        labelDonanteOrganos.setText(" ");

        javax.swing.GroupLayout pnlDatosTitularLayout = new javax.swing.GroupLayout(pnlDatosTitular);
        pnlDatosTitular.setLayout(pnlDatosTitularLayout);
        pnlDatosTitularLayout.setHorizontalGroup(
            pnlDatosTitularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosTitularLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosTitularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTipoNroDocumento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelApellido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDomicilio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelGrupoFactorSanguineo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDonanteOrganos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlDatosTitularLayout.setVerticalGroup(
            pnlDatosTitularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosTitularLayout.createSequentialGroup()
                .addComponent(labelNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelApellido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTipoNroDocumento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelDomicilio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelFechaNacimiento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelGrupoFactorSanguineo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelDonanteOrganos)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlObservaciones.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), null)); // NOI18N

        txtAreaObservaciones.setColumns(20);
        txtAreaObservaciones.setRows(2);
        jScrollPane2.setViewportView(txtAreaObservaciones);

        javax.swing.GroupLayout pnlObservacionesLayout = new javax.swing.GroupLayout(pnlObservaciones);
        pnlObservaciones.setLayout(pnlObservacionesLayout);
        pnlObservacionesLayout.setHorizontalGroup(
            pnlObservacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlObservacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        pnlObservacionesLayout.setVerticalGroup(
            pnlObservacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlObservacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCancelar.setFont(btnCancelar.getFont().deriveFont(btnCancelar.getFont().getSize()+2f));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(lblSantaFe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEmitirLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pnlTitulares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(pnlClaseLicencia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlDatosTitular, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlObservaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 8, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSantaFe, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlDatosTitular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlClaseLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlTitulares, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnEmitirLicencia))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFiltroNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltroNombreActionPerformed
        btnFiltroApellido.setEnabled(false);
        btnFiltroDocumento.setEnabled(false);
        txtFiltro.setEnabled(true);
        btnAplicarFiltro.setEnabled(true);
        btnLimpiarFiltro.setEnabled(true);
    }//GEN-LAST:event_btnFiltroNombreActionPerformed

    private void btnFiltroApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltroApellidoActionPerformed
        btnFiltroNombre.setEnabled(false);
        btnFiltroDocumento.setEnabled(false);
        txtFiltro.setEnabled(true);
        btnAplicarFiltro.setEnabled(true);
        btnLimpiarFiltro.setEnabled(true);
    }//GEN-LAST:event_btnFiltroApellidoActionPerformed

    private void btnFiltroDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltroDocumentoActionPerformed
        btnFiltroNombre.setEnabled(false);
        btnFiltroApellido.setEnabled(false);
        txtFiltro.setEnabled(true);
        btnAplicarFiltro.setEnabled(true);
        btnLimpiarFiltro.setEnabled(true);
    }//GEN-LAST:event_btnFiltroDocumentoActionPerformed

    private void btnLimpiarFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarFiltroActionPerformed
            btnFiltroNombre.setEnabled(true);
            btnFiltroApellido.setEnabled(true);
            btnFiltroDocumento.setEnabled(true);
            
            txtFiltro.setText("");
            txtFiltro.setEnabled(false);
            btnAplicarFiltro.setEnabled(false);
            btnLimpiarFiltro.setEnabled(false);
            
            DefaultTableModel model = (DefaultTableModel)tableTitulares.getModel();
            model.setRowCount(0);
            
            btnEmitirLicencia.setEnabled(false);
            
            labelNombre.setText(" ");
            labelApellido.setText(" ");
            labelTipoNroDocumento.setText(" ");
            labelDomicilio.setText(" ");
            labelFechaNacimiento.setText(" ");
            labelGrupoFactorSanguineo.setText(" ");
            labelDonanteOrganos.setText(" ");
            
            txtAreaClaseLicencia.setText(" ");
            txtAreaObservaciones.setText("");
            
            radioA.setEnabled(false);
            radioB.setEnabled(false);
            radioC.setEnabled(false);
            radioD.setEnabled(false);
            radioE.setEnabled(false);
            radioF.setEnabled(false);
            radioG.setEnabled(false);
            radioA.setSelected(false);
            radioB.setSelected(false);
            radioC.setSelected(false);
            radioD.setSelected(false);
            radioE.setSelected(false);
            radioF.setSelected(false);
            radioG.setSelected(false);
            
            lblDescripcionClase.setText("");
            
    }//GEN-LAST:event_btnLimpiarFiltroActionPerformed

        
    private void btnEmitirLicenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmitirLicenciaActionPerformed
        
        if(LicenciaController.getInstance().crearLicencia(titulares.get(tableTitulares.getSelectedRow()), claseSeleccionada , txtAreaObservaciones.getText())){
            
            JOptionPane.showMessageDialog(null, "La licencia ha sido emitida con éxito.", "Confirmacion", JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            
            JOptionPane.showMessageDialog(null, "No se ha podido emitir la licencia.", "Error", JOptionPane.ERROR_MESSAGE);
            
        }
        
        new UserMenu().setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_btnEmitirLicenciaActionPerformed

    private void radioAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAActionPerformed
        claseSeleccionada=ClaseLicenciaEnum.A;

        
        Titular titular = titulares.get(tableTitulares.getSelectedRow());
        lblDescripcionClase.setText("Ciclomotores, motocicletas y triciclos motorizados.");
        int edad = LicenciaController.getInstance().calcularEdad(titular.getFechaNacimiento());
        Date fechaVencimiento = LicenciaController.getInstance().calcularVigencia(titular, claseSeleccionada);
        Double costo;//TBD
        costo=50.0;//TBD
        boolean yaEmitida = LicenciaController.getInstance().yaEmitida(titular, ClaseLicenciaEnum.A);
        
        String mensaje="";
        
        if(yaEmitida){
            mensaje+="La licencia ya fue emitida. Debe renovar.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else if (edad<17) {
            mensaje+="La edad mínima es de 17 años.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else{
            mensaje+="La licencia puede ser emitida.\nCosto: $"+costo.toString()+"\nFecha de Vencimiento: "+sdf.format(fechaVencimiento);
            btnEmitirLicencia.setEnabled(true);
            txtAreaClaseLicencia.setForeground(new Color(0,153,0));
        }
        
        txtAreaClaseLicencia.setText(mensaje);        
        
    }//GEN-LAST:event_radioAActionPerformed

    private void radioDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDActionPerformed
        claseSeleccionada=ClaseLicenciaEnum.D;
        

        
        Titular titular = titulares.get(tableTitulares.getSelectedRow());
        lblDescripcionClase.setText("Transporte de pasajeros, emergencias, o seguridad, y clases B o C.");
        int edad = LicenciaController.getInstance().calcularEdad(titular.getFechaNacimiento());
        Date fechaVencimiento = LicenciaController.getInstance().calcularVigencia(titular, claseSeleccionada);
        Double costo;//TBD
        costo=50.0;//TBD
        boolean yaEmitida = LicenciaController.getInstance().yaEmitida(titular, ClaseLicenciaEnum.D);
        boolean tieneBValida = LicenciaController.getInstance().tieneBValida(titular);
        
        String mensaje="";
        
        if(yaEmitida){
            mensaje+="La licencia ya fue emitida. Debe renovar.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else if (edad<21) {
            mensaje+="La edad mínima es de 21 años.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        } else if (edad>65){
            mensaje+="No puede emitirse por primera vez a mayores de 65 años.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        } else if (!tieneBValida){
            mensaje+="Debe tener licencia Clase B por al menos un año.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else{
            mensaje+="La licencia puede ser emitida.\nCosto: $"+costo.toString()+"\nFecha de Vencimiento: "+sdf.format(fechaVencimiento);
            btnEmitirLicencia.setEnabled(true);
            txtAreaClaseLicencia.setForeground(new Color(0,153,0));
        }
        
        txtAreaClaseLicencia.setText(mensaje);        
        
    }//GEN-LAST:event_radioDActionPerformed

    private void btnAplicarFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplicarFiltroActionPerformed
        
        String filtro = txtFiltro.getText();
        
        if (btnFiltroNombre.isEnabled()){
            titulares = TitularController.getInstance().buscarTitulares(filtro, FiltroTitularesEnum.NOMBRE);
        } else if (btnFiltroApellido.isEnabled()){
            titulares = TitularController.getInstance().buscarTitulares(filtro, FiltroTitularesEnum.APELLIDO);
        } else if (btnFiltroDocumento.isEnabled()){
            titulares = TitularController.getInstance().buscarTitulares(filtro, FiltroTitularesEnum.DOCUMENTO);
        } else titulares = TitularController.getInstance().buscarTitulares(filtro, FiltroTitularesEnum.TODOS);
        
        DefaultTableModel model = (DefaultTableModel)tableTitulares.getModel();
        model.setRowCount(0);
        
        for(int i=0;i<titulares.size();i++){
            Titular titular = titulares.get(i);
            Object[] fila = {titular.getNombre(),titular.getApellido(),titular.getTipoDocumento().toString(),titular.getCodigoDocumento()};
            model.addRow(fila);
        }
        
    }//GEN-LAST:event_btnAplicarFiltroActionPerformed

    private void radioBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBActionPerformed
        Titular titular = titulares.get(tableTitulares.getSelectedRow());

        
        claseSeleccionada=ClaseLicenciaEnum.B;
        lblDescripcionClase.setText("Automóviles y camionetas con acoplado.");
        int edad = LicenciaController.getInstance().calcularEdad(titular.getFechaNacimiento());
        Date fechaVencimiento = LicenciaController.getInstance().calcularVigencia(titular, claseSeleccionada);
        Double costo;//TBD
        costo=50.0;//TBD
        boolean yaEmitida = LicenciaController.getInstance().yaEmitida(titular, ClaseLicenciaEnum.B);
        
        String mensaje="";
        
        if(yaEmitida){
            mensaje+="La licencia ya fue emitida. Debe renovar.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else if (edad<17) {
            mensaje+="La edad mínima es de 17 años.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else{
            mensaje+="La licencia puede ser emitida.\nCosto: $"+costo.toString()+"\nFecha de Vencimiento: "+sdf.format(fechaVencimiento);
            btnEmitirLicencia.setEnabled(true);
            txtAreaClaseLicencia.setForeground(new Color(0,153,0));
        }
        
        txtAreaClaseLicencia.setText(mensaje);        
        
    }//GEN-LAST:event_radioBActionPerformed

    private void radioFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFActionPerformed
        Titular titular = titulares.get(tableTitulares.getSelectedRow());

        
        claseSeleccionada=ClaseLicenciaEnum.F;
        lblDescripcionClase.setText("Automotores adaptados para discapacitados.");
        int edad = LicenciaController.getInstance().calcularEdad(titular.getFechaNacimiento());
        Date fechaVencimiento = LicenciaController.getInstance().calcularVigencia(titular, claseSeleccionada);
        Double costo;//TBD
        costo=50.0;//TBD
        boolean yaEmitida = LicenciaController.getInstance().yaEmitida(titular, ClaseLicenciaEnum.F);
        
        String mensaje="";
        
        if(yaEmitida){
            mensaje+="La licencia ya fue emitida. Debe renovar.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else if (edad<17) {
            mensaje+="La edad mínima es de 17 años.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else{
            mensaje+="La licencia puede ser emitida.\nCosto: $"+costo.toString()+"\nFecha de Vencimiento: "+sdf.format(fechaVencimiento);
            btnEmitirLicencia.setEnabled(true);
            txtAreaClaseLicencia.setForeground(new Color(0,153,0));
        }
        
        txtAreaClaseLicencia.setText(mensaje);        
        
    }//GEN-LAST:event_radioFActionPerformed

    private void radioGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioGActionPerformed
        Titular titular = titulares.get(tableTitulares.getSelectedRow());

        
        claseSeleccionada=ClaseLicenciaEnum.G;
        lblDescripcionClase.setText("Tractores y maquinaria especial agrícola.");
        int edad = LicenciaController.getInstance().calcularEdad(titular.getFechaNacimiento());
        Date fechaVencimiento = LicenciaController.getInstance().calcularVigencia(titular, claseSeleccionada);
        Double costo;//TBD
        costo=50.0;//TBD
        boolean yaEmitida = LicenciaController.getInstance().yaEmitida(titular, ClaseLicenciaEnum.G);
        
        String mensaje="";
        
        if(yaEmitida){
            mensaje+="La licencia ya fue emitida. Debe renovar.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else if (edad<17) {
            mensaje+="La edad mínima es de 17 años.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else{
            mensaje+="La licencia puede ser emitida.\nCosto: $"+costo.toString()+"\nFecha de Vencimiento: "+sdf.format(fechaVencimiento);
            btnEmitirLicencia.setEnabled(true);
            txtAreaClaseLicencia.setForeground(new Color(0,153,0));
        }
        
        txtAreaClaseLicencia.setText(mensaje);        
        
    }//GEN-LAST:event_radioGActionPerformed

    private void radioCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCActionPerformed
        Titular titular = titulares.get(tableTitulares.getSelectedRow());
        
        
        claseSeleccionada=ClaseLicenciaEnum.C;
        lblDescripcionClase.setText("Camiones sin acoplado y comprendidos en clase B.");
        int edad = LicenciaController.getInstance().calcularEdad(titular.getFechaNacimiento());
        Date fechaVencimiento = LicenciaController.getInstance().calcularVigencia(titular, claseSeleccionada);
        Double costo;//TBD
        costo=50.0;//TBD
        boolean yaEmitida = LicenciaController.getInstance().yaEmitida(titular, ClaseLicenciaEnum.C);
        boolean tieneBValida = LicenciaController.getInstance().tieneBValida(titular);
        
        String mensaje="";
        
        if(yaEmitida){
            mensaje+="La licencia ya fue emitida. Debe renovar.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else if (edad<21) {
            mensaje+="La edad mínima es de 21 años.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        } else if (edad>65){
            mensaje+="No puede emitirse por primera vez a mayores de 65 años.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        } else if (!tieneBValida){
            mensaje+="Debe tener licencia Clase B por al menos un año.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else{
            mensaje+="La licencia puede ser emitida.\nCosto: $"+costo.toString()+"\nFecha de Vencimiento: "+sdf.format(fechaVencimiento);
            btnEmitirLicencia.setEnabled(true);
            txtAreaClaseLicencia.setForeground(new Color(0,153,0));
        }
        
        txtAreaClaseLicencia.setText(mensaje);        
        
    }//GEN-LAST:event_radioCActionPerformed

    private void radioEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioEActionPerformed
        Titular titular = titulares.get(tableTitulares.getSelectedRow());
        
        radioB.setSelected(false);
        radioC.setSelected(false);
        radioD.setSelected(false);
        radioA.setSelected(false);
        radioF.setSelected(false);
        radioG.setSelected(false);
        
        claseSeleccionada=ClaseLicenciaEnum.E;
        lblDescripcionClase.setText("Camiones con acoplado, maquinaria  no agrícola, y clases B y C.");
        int edad = LicenciaController.getInstance().calcularEdad(titular.getFechaNacimiento());
        Date fechaVencimiento = LicenciaController.getInstance().calcularVigencia(titular, claseSeleccionada);
        Double costo;//TBD
        costo=50.0;//TBD
        boolean yaEmitida = LicenciaController.getInstance().yaEmitida(titular, ClaseLicenciaEnum.E);
        boolean tieneBValida = LicenciaController.getInstance().tieneBValida(titular);
        
        String mensaje="";
        
        if(yaEmitida){
            mensaje+="La licencia ya fue emitida. Debe renovar.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else if (edad<21) {
            mensaje+="La edad mínima es de 21 años.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        } else if (edad>65){
            mensaje+="No puede emitirse por primera vez a mayores de 65 años.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        } else if (!tieneBValida){
            mensaje+="Debe tener licencia Clase B por al menos un año.\n";
            btnEmitirLicencia.setEnabled(false);
            txtAreaClaseLicencia.setForeground(new Color(153,0,0));
        }
        else{
            mensaje+="La licencia puede ser emitida.\nCosto: $"+costo.toString()+"\nFecha de Vencimiento: "+sdf.format(fechaVencimiento);
            btnEmitirLicencia.setEnabled(true);
            txtAreaClaseLicencia.setForeground(new Color(0,153,0));
        }
        
        txtAreaClaseLicencia.setText(mensaje);        
        
    }//GEN-LAST:event_radioEActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        Integer respuesta = JOptionPane.showConfirmDialog(null, "¿Está seguro de que desea cancelar el registro? Se perderán los datos no guardados y volverá al Menu.", "Cancelar",  JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
                new UserMenu().setVisible(true);
                this.dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserEmitirLicencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserEmitirLicencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserEmitirLicencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserEmitirLicencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserEmitirLicencia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAplicarFiltro;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEmitirLicencia;
    private javax.swing.JButton btnFiltroApellido;
    private javax.swing.JButton btnFiltroDocumento;
    private javax.swing.JButton btnFiltroNombre;
    private javax.swing.JButton btnLimpiarFiltro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelApellido;
    private javax.swing.JLabel labelDomicilio;
    private javax.swing.JLabel labelDonanteOrganos;
    private javax.swing.JLabel labelFechaNacimiento;
    private javax.swing.JLabel labelGrupoFactorSanguineo;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelTipoNroDocumento;
    private javax.swing.JLabel lblBuscarPor;
    private javax.swing.JLabel lblDescripcionClase;
    private javax.swing.JLabel lblEmitirLicencia;
    private javax.swing.JLabel lblSantaFe;
    private javax.swing.JLabel lblSubtitulo;
    private javax.swing.JPanel pnlClaseLicencia;
    private javax.swing.JPanel pnlClases;
    private javax.swing.JPanel pnlDatosTitular;
    private javax.swing.JPanel pnlObservaciones;
    private javax.swing.JPanel pnlTitulares;
    private javax.swing.JPanel pnlTitulo;
    private javax.swing.JRadioButton radioA;
    private javax.swing.JRadioButton radioB;
    private javax.swing.JRadioButton radioC;
    private javax.swing.JRadioButton radioD;
    private javax.swing.JRadioButton radioE;
    private javax.swing.JRadioButton radioF;
    private javax.swing.JRadioButton radioG;
    private javax.swing.ButtonGroup radioGroup;
    private javax.swing.JTable tableTitulares;
    private javax.swing.JTextArea txtAreaClaseLicencia;
    private javax.swing.JTextArea txtAreaObservaciones;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
