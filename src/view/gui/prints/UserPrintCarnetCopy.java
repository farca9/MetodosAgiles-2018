/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.gui.prints;

import com.github.sarxos.webcam.Webcam;
import controller.CarnetController;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import model.Carnet;
import model.Titular;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import util.TitularReceiver;
import view.gui.list.UserSeleccionarTitularPopUp;
import view.gui.menus.UserMenu;

/**
 *
 * @author Facundo
 */
public class UserPrintCarnetCopy extends javax.swing.JFrame implements TitularReceiver{

    private Titular titular;
    private List<Carnet> carnets;
    
    /**
     * Creates new form UserPrintCarnetCopy
     */
    public UserPrintCarnetCopy() {
        ImageIcon logo = new ImageIcon("src/res/drawable/sfc_logo.jpg");
        Image icon = logo.getImage();
        this.setIconImage(icon);
        initComponents();
        
        this.btnImprimir.setEnabled(false);
        this.setLocationRelativeTo(null);
        tableCarnets.setRowSelectionAllowed(true);
        tableCarnets.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tableCarnets.getTableHeader().setReorderingAllowed(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSantaFe = new javax.swing.JLabel();
        lblEmitirLicencia = new javax.swing.JLabel();
        txtTitular = new javax.swing.JTextField();
        btnBuscarTitular = new javax.swing.JButton();
        btnLimpiarBusqueda = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblFotoTitular = new javax.swing.JLabel();
        pnlCarnets = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCarnets = new javax.swing.JTable();
        btnTomarFoto = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GLC SFC - Imprimir copia de carnet");

        lblSantaFe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSantaFe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/drawable/logo-santafe.png"))); // NOI18N
        lblSantaFe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblEmitirLicencia.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
        lblEmitirLicencia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmitirLicencia.setText("IMPRIMIR COPIA DE CARNET");

        txtTitular.setEditable(false);
        txtTitular.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtTitular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTitularActionPerformed(evt);
            }
        });

        btnBuscarTitular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/search_mini.png"))); // NOI18N
        btnBuscarTitular.setToolTipText("Busque el titular para el cual quiere imprimir la licencia");
        btnBuscarTitular.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBuscarTitular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTitularActionPerformed(evt);
            }
        });

        btnLimpiarBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/cancel_mini.png"))); // NOI18N
        btnLimpiarBusqueda.setToolTipText("Limpie el titular seleccionado");
        btnLimpiarBusqueda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLimpiarBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarBusquedaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel5.setText("Nombre del Titular");

        lblFotoTitular.setBackground(new java.awt.Color(255, 255, 255));
        lblFotoTitular.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        lblFotoTitular.setForeground(new java.awt.Color(0, 0, 0));
        lblFotoTitular.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFotoTitular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/drawable/user.png"))); // NOI18N
        lblFotoTitular.setText(".");
        lblFotoTitular.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblFotoTitular.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblFotoTitular.setOpaque(true);

        pnlCarnets.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Carnets Disponibles", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), null)); // NOI18N

        tableCarnets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha de impresion", "Fecha de vencimiento", "Clases"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableCarnets);

        javax.swing.GroupLayout pnlCarnetsLayout = new javax.swing.GroupLayout(pnlCarnets);
        pnlCarnets.setLayout(pnlCarnetsLayout);
        pnlCarnetsLayout.setHorizontalGroup(
            pnlCarnetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCarnetsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCarnetsLayout.setVerticalGroup(
            pnlCarnetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCarnetsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnTomarFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/camera_mini.png"))); // NOI18N
        btnTomarFoto.setText("Tomar Foto");
        btnTomarFoto.setEnabled(false);
        btnTomarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTomarFotoActionPerformed(evt);
            }
        });

        btnImprimir.setFont(btnImprimir.getFont().deriveFont(btnImprimir.getFont().getSize()+2f));
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/preview_carnet.png"))); // NOI18N
        btnImprimir.setText("Imprimir copia");
        btnImprimir.setToolTipText("Imprimir una copia del carnet");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnCancelar.setFont(btnCancelar.getFont().deriveFont(btnCancelar.getFont().getSize()+2f));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/previous_mini.png"))); // NOI18N
        btnCancelar.setText("Volver");
        btnCancelar.setToolTipText("Cancelar la operaci√≥n y volver al menu");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblEmitirLicencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblSantaFe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTitular))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pnlCarnets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTomarFoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFotoTitular, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBuscarTitular, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiarBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblSantaFe, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblEmitirLicencia)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnBuscarTitular, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtTitular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnLimpiarBusqueda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblFotoTitular, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTomarFoto))
                    .addComponent(pnlCarnets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pnlCarnets.getAccessibleContext().setAccessibleName("Carnets disponibles");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTitularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTitularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTitularActionPerformed

    private void btnBuscarTitularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTitularActionPerformed
        new UserSeleccionarTitularPopUp(this).setVisible(true);

    }//GEN-LAST:event_btnBuscarTitularActionPerformed

    private void btnLimpiarBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarBusquedaActionPerformed

        if(titular != null){
            titular = null;
            txtTitular.setText("");
            btnTomarFoto.setEnabled(false);
            lblFotoTitular.setIcon(new ImageIcon("src\\res\\drawable\\user.png"));
            lblFotoTitular.setText(".");
            ((DefaultTableModel)tableCarnets.getModel()).setRowCount(0);
            btnImprimir.setEnabled(false);

        }
    }//GEN-LAST:event_btnLimpiarBusquedaActionPerformed

    private void btnTomarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTomarFotoActionPerformed
        lblFotoTitular.setText("");

        // Inicializo la webcam y tomo la foto
        Webcam webcam = Webcam.getDefault();
        if(webcam==null) {
            JOptionPane.showMessageDialog(this, "No se ha podido tomar la foto", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        webcam.setViewSize(new Dimension(640, 480));
        webcam.open();
        BufferedImage imagen = webcam.getImage();
        webcam.close();

        // Guardo la foto con su resolucion original
        try {
            ImageIO.write(imagen, "PNG", new File("test.png"));
        } catch (IOException ex) {
            Logger.getLogger(UserPrintCarnet.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "No se ha podido tomar la foto", "Error", JOptionPane.ERROR_MESSAGE);
        }

        // Muestro la foto tomada en la interfaz
        try {
            lblFotoTitular.setIcon( new ImageIcon(ImageIO.read(new File("test.png"))));
        } catch (IOException ex) {
            Logger.getLogger(UserPrintCarnet.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "No se ha podido tomar la foto", "Error", JOptionPane.ERROR_MESSAGE);
        }

        // Guardo la foto en la resolucion necesitada (256x256 - tamanio del label que la contiene)
        BufferedImage img = new BufferedImage(lblFotoTitular.getWidth(), lblFotoTitular.getHeight(), BufferedImage.TYPE_INT_RGB);
        Graphics2D g2d = img.createGraphics();
        lblFotoTitular.printAll(g2d);
        g2d.dispose();
        try {
            ImageIO.write(img, "JPG", new File("fotoTitular.jpg"));
        } catch (IOException ex) {
            Logger.getLogger(UserPrintCarnet.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "No se ha podido tomar la foto", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTomarFotoActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed

        Carnet carnetSeleccionado=null;
        if(tableCarnets.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(this, "Debe seleccionar alg√∫n carnet.", "Atenci√≥n", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (lblFotoTitular.getText().equals(".")){
            JOptionPane.showMessageDialog(this, "Debe tomar una nueva foto.", "Atenci√≥n", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            carnetSeleccionado = carnets.get(tableCarnets.getSelectedRow());
            if (JOptionPane.showConfirmDialog(null, "¬øDesea imprimir una copia del carnet?\nCosto: $50.0", "Confirmar",  JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");

                //Generado del reporte

                try{

                    JasperReport jr = (JasperReport) JRLoader.loadObjectFromFile("src/view/reports/Carnet.jasper");

                    //pasaje de parametros
                    HashMap<String,Object> parameters = new HashMap();

                    parameters.put("codigoDocumento", titular.getCodigoDocumento());
                    parameters.put("apellido", titular.getApellido().toUpperCase());
                    parameters.put("nombre", titular.getNombre().toUpperCase());
                    parameters.put("fechaNac", sdf.format(titular.getFechaNacimiento()));
                    parameters.put("domicilio", titular.getDomicilio().toUpperCase());
                    parameters.put("grupoSanguineo", titular.getGrupoSanguineo().name());
                    if(titular.isFactor()){
                       parameters.put("factor", "+");
                   } else {
                       parameters.put("factor", "-");
                   }
                   if(titular.isDonanteOrganos()){
                       parameters.put("donante", "SI");
                   } else {
                       parameters.put("donante", "NO");
                   }

                   parameters.put("emision", sdf.format(carnetSeleccionado.getFechaImpresion()));
                   parameters.put("vencimiento", sdf.format(carnetSeleccionado.getFechaVencimiento()));
                   parameters.put("clase", carnetSeleccionado.getClases());
                   parameters.put("observaciones", titular.getObservaciones().toUpperCase());

                   JasperPrint jp = JasperFillManager.fillReport(jr, parameters, new JREmptyDataSource());
                   JasperViewer jv = new JasperViewer(jp,false);
                   jv.show();

                   String out="";
                   out=(new File(System.getProperty("user.home"),"Desktop")).getPath();
                   out+="/copia_"+titular.getApellido()+","+titular.getNombre()+"_"+carnetSeleccionado.getClases().replace(" ", "")+"_"+sdf.format(carnetSeleccionado.getFechaVencimiento()).replace("/","-")+".pdf";
                   JasperExportManager.exportReportToPdfFile(jp, out);

                }catch(Exception e){
                    e.printStackTrace();
                }
                
            } else {
                return;
            }
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        Integer respuesta = JOptionPane.showConfirmDialog(null, "¬øEst√° seguro de que desea volver al Menu?", "Volver",  JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            new UserMenu().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPrintCarnetCopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPrintCarnetCopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPrintCarnetCopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPrintCarnetCopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserPrintCarnetCopy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarTitular;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpiarBusqueda;
    private javax.swing.JButton btnTomarFoto;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEmitirLicencia;
    private javax.swing.JLabel lblFotoTitular;
    private javax.swing.JLabel lblSantaFe;
    private javax.swing.JPanel pnlCarnets;
    private javax.swing.JTable tableCarnets;
    private javax.swing.JTextField txtTitular;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setTitularRecibido(Titular titular) {
        this.titular=titular;
        txtTitular.setText(titular.getApellido()+", "+titular.getNombre());
        
        carnets=CarnetController.getInstance().buscarCarnet(titular);
        if(carnets.isEmpty()){
            JOptionPane.showMessageDialog(this, "El titular seleccionado no posee carnets validos.", "Error", JOptionPane.ERROR_MESSAGE);
            this.txtTitular.setText("");
            titular=null;
            btnTomarFoto.setEnabled(false);
        }else{
            DefaultTableModel model = (DefaultTableModel)tableCarnets.getModel();
            model.setRowCount(0);
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            
            for(Carnet carnet : carnets){
                Object[] fila = {sdf.format(carnet.getFechaImpresion()), sdf.format(carnet.getFechaVencimiento()), carnet.getClases()};
                model.addRow(fila);
            }
            
            btnTomarFoto.setEnabled(true);
            btnImprimir.setEnabled(true);
            
        }
    }
}
